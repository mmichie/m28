# Test file for the return statement

# Define a function with an early return
(def (early-return x)
  (if (< x 5)
      (return "Less than 5"))
  (if (< x 10)
      (return "Less than 10"))
  (return "Greater than or equal to 10"))

# Test the function with different values
(print "Testing early-return function:")
(print "x = 3: " (early-return 3))
(print "x = 7: " (early-return 7))
(print "x = 15: " (early-return 15))

# Simple function with return in the middle
(def (check-positive n)
  (if (< n 0)
    (return "Negative number"))
  (return "Positive number"))

(print "Testing check-positive:")
(print "n = -5: " (check-positive -5))
(print "n = 10: " (check-positive 10))

# Define a nested function with returns
(def (outer x)
  (def (inner y)
    (if (< y 0)
        (return "Negative"))
    (return (+ "Inner: " (str y))))
  
  (= inner-result (inner x))
  (print inner-result)
  (return (+ "Outer: " (str x))))

(print "Testing nested functions:")
(print (outer -2))
(print (outer 10))