(def (make-memoized f)
    (= cache {})
    (def (memoized x)
        (if (in x cache)
            (return (get cache x))
            (else
                (= result (f x))
                (= (get cache x) result)
                (return result))))
    (return memoized))

(def (slow-fib n)
    (if (< n 2)
        (return n)
        (return (+ (slow-fib (- n 1)) (slow-fib (- n 2))))))

(= memoized-fib (make-memoized slow-fib))

(print "Computing slow-fib(30):")
(print (slow-fib 30))

(print "Computing memoized-fib(30):")
(print (memoized-fib 30))

(print "Computing memoized-fib(30) again (should be faster):")
(print (memoized-fib 30))
