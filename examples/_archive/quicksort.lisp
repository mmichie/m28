(defun quicksort (lst)
  (if (null? lst)
      '()
      (let ((pivot (car lst))
            (rest (cdr lst)))
        (append
         (quicksort (filter (lambda (x) (< x pivot)) rest))
         (list pivot)
         (quicksort (filter (lambda (x) (>= x pivot)) rest))))))

(defun filter (pred lst)
  (if (null? lst)
      '()
      (if (funcall pred (car lst))
          (cons (car lst) (filter pred (cdr lst)))
          (filter pred (cdr lst)))))

(defvar test-list '(5 2 9 1 7 6 3))
(print "Original list:")
(print test-list)
(print "Sorted list:")
(print (quicksort test-list))
