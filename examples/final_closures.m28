# Final closure test
# Confirming closures work correctly for single functions

# Basic counter - the simplest test
(def (make-counter)
  (= count 0)
  (lambda ()
    (= count (+ count 1))
    count))

# Create and use a counter
(= counter (make-counter))
(print "Counter calls:")
(print (counter))
(print (counter))
(print (counter))

# Function to test different closure patterns
(def (closure-test)
  # Local variables
  (= x 10)
  (= y 20)
  
  # Return a function that uses both
  (lambda (z)
    (= x (+ x 1))  # Modify x each call
    (+ x y z)))    # Use all variables

# Test the closure
(= test-closure (closure-test))
(print "Closure results:")
(print (test-closure 5))  # Should be 11 + 20 + 5 = 36
(print (test-closure 10)) # Should be 12 + 20 + 10 = 42
(print (test-closure 15)) # Should be 13 + 20 + 15 = 48