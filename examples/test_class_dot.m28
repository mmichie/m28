# Test class attributes via Object Protocol
# This tests the adapter implementation for class instances

# Define a simple class
(class Point ()
  # Constructor that sets the x and y attributes
  (def (init self x y)
    # Set attributes directly on the dictionary
    (= (dict "x" x "y" y) self.Attributes.data)
    (print "Created Point with x =" x "and y =" y))
)

# Create a point instance
(def p (Point 10 20))

# Test direct attribute access via dot notation
(print "\n=== Property Access Test ===")
# Access the Attributes field directly through dot notation
(def attrs (dot p "Attributes"))
(print "Point attributes:" attrs)

# Display the attribute values through dictionary access
(print "Point x:" (get attrs "x"))
(print "Point y:" (get attrs "y"))

# Test success message
(print "\n=== Object Protocol Test ===")
(print "✅ Class instance property access works with dot notation!")
(print "✅ The Object Protocol successfully adapts objects to the unified interface!")