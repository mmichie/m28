(print "Tree Traversal Example")

(= leaf1 (list 1 None None))
(= leaf4 (list 4 None None))
(= node3 (list 3 leaf1 leaf4))
(= leaf6 (list 6 None None))
(= leaf8 (list 8 None None))
(= node7 (list 7 leaf6 leaf8))
(= root (list 5 node3 node7))

(print "Sample tree:")
(print root)

(print "Root value:")
(print (nth root 0))

(print "Left subtree:")
(= left-subtree (nth root 1))
(print left-subtree)

(print "Right subtree:")
(= right-subtree (nth root 2))
(print right-subtree)

(print "Left subtree value:")
(print (nth left-subtree 0))

(print "Right subtree value:")
(print (nth right-subtree 0))

(def (tree-sum tree)
    (if (== tree None)
        (return 0)
        (begin
            (= value (nth tree 0))
            (= left (nth tree 1))
            (= right (nth tree 2))
            (= sum value)
            (if (!= left None)
                (= sum (+ sum (tree-sum left))))
            (if (!= right None)
                (= sum (+ sum (tree-sum right))))
            (return sum))))

(print "Sum of all values in the tree:")
(print (tree-sum root))

(def (tree-depth tree)
    (if (== tree None)
        (return 0)
        (begin
            (= left (nth tree 1))
            (= right (nth tree 2))
            (= left-depth (tree-depth left))
            (= right-depth (tree-depth right))
            (if (>= left-depth right-depth)
                (return (+ 1 left-depth))
                (return (+ 1 right-depth))))))

(print "Depth of the tree:")
(print (tree-depth root))