# Sample module demonstrating the enhanced module system features
# This module shows how to use the __exports__ mechanism to control
# which symbols are visible to importers.

# Module metadata
(= MODULE_NAME "sample_module")
(= VERSION "1.0.0")
(= AUTHOR "M28 Team")

# Public function that will be exported
(def (greet name)
  (+ "Hello, " name "!"))

# Another public function
(def (calculate x y)
  (* (+ x y) 2))

# Private helper function (not exported)
(def (_format_message msg)
  (+ "[" MODULE_NAME "]: " msg))

# Private data (not exported)
(= _internal_config (dict
  "debug" False
  "max_retries" 3
))

# Public configuration (will be exported)
(= PUBLIC_CONFIG (dict
  "version" VERSION
  "name" MODULE_NAME
  "author" AUTHOR
))

# Define which symbols should be exported
# Only these symbols will be visible when the module is imported
(= __exports__ (list
  "MODULE_NAME"
  "VERSION"
  "AUTHOR"
  "greet"
  "calculate"
  "PUBLIC_CONFIG"
))

# Print a message when the module is loaded
(print (_format_message "Module loaded successfully"))