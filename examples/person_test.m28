# Person object test
# This tests if person objects have separate state

# Person with name/age/birthday operations
(def (make-person name age)
  # Return a dispatch function
  (lambda (op)
    (if (== op "name")
      name
      (if (== op "age")
        age
        (if (== op "birthday")
          (begin
            (= age (+ age 1))
            (+ name " is now " (str age) " years old!"))
          "unknown")))))

# Create two people with different names/ages
(= person1 (make-person "Alice" 30))
(= person2 (make-person "Bob" 25))

# Test initial values
(print "Person 1 name: " (person1 "name"))
(print "Person 1 age: " (person1 "age"))
(print "Person 2 name: " (person2 "name"))
(print "Person 2 age: " (person2 "age"))

# Have one birthday for each
(print (person1 "birthday"))
(print (person2 "birthday"))

# Check values after birthdays
(print "Person 1 age after birthday: " (person1 "age"))
(print "Person 2 age after birthday: " (person2 "age"))

# Have another birthday for person 1
(print (person1 "birthday"))

# Final values - person 1 should have age 32, person 2 age 26
(print "Person 1 final age: " (person1 "age"))
(print "Person 2 final age: " (person2 "age"))