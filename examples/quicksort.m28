(define quicksort
  (lambda (lst)
    (if (null? lst)
        '()
        (let ((pivot (car lst))
              (rest (cdr lst)))
          (append
           (quicksort (filter (lambda (x) (< x pivot)) rest))
           (list pivot)
           (quicksort (filter (lambda (x) (>= x pivot)) rest)))))))

(define filter
  (lambda (pred lst)
    (if (null? lst)
        '()
        (if (pred (car lst))
            (cons (car lst) (filter pred (cdr lst)))
            (filter pred (cdr lst))))))

(define test-list '(5 2 9 1 7 6 3))
(print "Original list:")
(print test-list)
(print "Sorted list:")
(print (quicksort test-list))
