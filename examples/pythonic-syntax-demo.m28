# Pythonic Function Call Syntax Demo
# Shows the new name(args) sugar alongside traditional S-expressions

print("=== Pythonic Function Call Syntax ===\n")

# BEFORE (S-expression style - still works!)
(print "Traditional style:")
(print (len [1, 2, 3]))
(print (sum [1, 2, 3, 4, 5]))

# AFTER (Pythonic style - new!)
print("\nPythonic style:")
print(len([1, 2, 3]))
print(sum([1, 2, 3, 4, 5]))

# Shell one-liner examples
print("\n=== Perfect for Shell One-Liners ===")
print("Calculate sum of squares:")
print(sum([x*x for x in range(10)]))

print("\nFind max in list:")
print(max([3, 1, 4, 1, 5, 9, 2, 6]))

print("\nSort and reverse:")
print(list(reversed(sorted([3, 1, 4, 1, 5]))))

# Mix and match styles!
print("\n=== Mix Both Styles ===")
print(len([1, 2, 3]))           # Pythonic
(print (+ 1 2 3))                # S-expression
print((+ 1 2 3))                 # Pythonic call with S-expression arg

# Real-world data processing
print("\n=== Real-World Example ===")
(= data [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
(= evens [x for x in data if (== (% x 2) 0)])
print(f"Even numbers: {evens}")
print(f"Sum: {sum(evens)}")
print(f"Average: {(/ (sum evens) (len evens))}")

print("\nâœ… Pythonic syntax makes M28 perfect for shell scripting!")
