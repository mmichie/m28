# Minimal state dispatch example
# Testing just one variable with one operation

# Create a counter with get/increment operations
(def (make-counter)
  # Private state
  (= count 0)
  
  # Return a dispatch function
  (lambda (op)
    (if (== op "get")
      count
      (if (== op "inc")
        (begin
          (= count (+ count 1))
          count)
        "unknown"))))

# Create two counters
(= c1 (make-counter))
(= c2 (make-counter))

# Test operations
(print "Counter 1 initial: " (c1 "get"))
(print "Counter 1 increment: " (c1 "inc"))
(print "Counter 1 current: " (c1 "get"))

(print "Counter 2 initial: " (c2 "get"))
(print "Counter 2 increment: " (c2 "inc"))

(print "Counter 1 unchanged: " (c1 "get"))