# Example of the new class syntax
# This demonstrates the syntax sugar for object creation

# Define a Person class with the new syntax
(class Person
  # Instance variables with default values
  (= name "Anonymous")
  (= age 0)
  
  # Constructor method
  (def (init self new-name new-age)
    (dict.set self "name" new-name)
    (dict.set self "age" new-age)
    (print "Created person:" new-name))
  
  # Regular methods
  (def (greet self)
    (+ "Hello, my name is " (dict.get self "name")))
    
  (def (birthday self)
    (dict.set self "age" (+ (dict.get self "age") 1))
    (+ (dict.get self "name") " is now " (str (dict.get self "age")) " years old!"))
    
  (def (info self)
    (dict 
      "name" (dict.get self "name")
      "age" (dict.get self "age"))))

# Create instances using the class name
(= alice (Person "Alice" 30))
(= bob (Person "Bob" 25))

# Get methods directly from the dictionary for now
(print ((dict.get alice "greet") alice))
(print ((dict.get bob "greet") bob))

# Update state with methods
(print ((dict.get alice "birthday") alice))
(print ((dict.get alice "birthday") alice))
(print ((dict.get bob "birthday") bob))

# Get object info
(print "Alice's info:" ((dict.get alice "info") alice))
(print "Bob's info:" ((dict.get bob "info") bob))