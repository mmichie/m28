# Enhanced Property Access Example
#
# This file demonstrates the refined direct property access syntax
# using the new helper functions and built-in functions.

# Create objects to work with
(def person (dict "name" "Alice" "age" 30 "city" "New York"))
(def numbers [10 20 30 40 50])
(def text "Hello, World!")

# Test the getattr function
(print "\n=== getattr Examples ===")
(print "person.name:" (getattr person "name"))
(print "person.age:" (getattr person "age"))
(print "person.job (with default):" (getattr person "job" "Programmer"))

# Test the setattr function
(print "\n=== setattr Examples ===")
(setattr person "job" "Developer")
(print "After setattr, person.job:" (getattr person "job"))
(setattr person "age" 31)
(print "After setattr, person.age:" (getattr person "age"))

# Test the hasattr function
(print "\n=== hasattr Examples ===")
(print "Does person have 'name'?" (hasattr person "name"))
(print "Does person have 'address'?" (hasattr person "address"))

# Test getitem/setitem for different container types
(print "\n=== Item Access Examples ===")
(print "numbers[2]:" (getitem numbers 2))
(print "text[0]:" (getitem text 0))
(print "person['name']:" (getitem person "name"))

# Modify containers
(setitem numbers 2 99)
(setitem person "city" "Boston")
(print "After setitem, numbers:" numbers)
(print "After setitem, person:" person)

# Test delitem
(delitem person "job")
(print "After delitem, person:" person)

# Test the dir function
(print "\n=== dir Examples ===")
(print "dir(person):" (dir person))
(print "dir(numbers):" (dir numbers))

# Demonstrate accessing methods via getattr
(print "\n=== Method Access via getattr ===")
(def append-method (getattr numbers "append"))
(def new-list (append-method 60))
(print "After appending via method:" new-list)

(def upper-method (getattr text "upper"))
(print "text.upper():" (upper-method))

# Create a class with enhanced property access
(print "\n=== Class with Enhanced Property Access ===")
(class Person ()
  # Constructor
  (def (init self name age)
    (setattr self "name" name)
    (setattr self "age" age)
    (print "Person created with name:" name))
  
  # Method using enhanced property access
  (def (birthday self)
    (setattr self "age" (+ (getattr self "age") 1))
    (+ "Happy Birthday! " (getattr self "name") 
       " is now " (str (getattr self "age")) " years old!"))
)

# Create and use a Person instance
(def bob (Person "Bob" 25))
(print "Name:" (getattr bob "name"))
(print "Age:" (getattr bob "age"))
(print ((getattr bob "birthday") bob))