# Example demonstrating improved super method calling with inheritance

# Define a base Animal class
(class Animal ()
  # Constructor that sets the name and species attributes
  (def (init self name)
    # Set attributes directly on the dictionary
    (= (dict "name" name "species" "Unknown") self.Attributes.data)
    (print "Created Animal named" name))
  
  # Methods
  (def (speak self)
    "Some generic animal sound")
  
  (def (describe self)
    (+ "I am " (get self.Attributes "name") 
       " a " (get self.Attributes "species")))
)

# Define a Dog class that inherits from Animal
(class Dog (Animal)
  # Constructor with additional breed parameter
  (def (init self name breed)
    # Call the parent class init method using super()
    ((get (super self) "init") name)
    # Set additional attributes
    (= self.Attributes.data.species "Dog")
    (= self.Attributes.data.breed breed)
    (print "Dog breed is" breed))
  
  # Override speak method
  (def (speak self)
    "Woof! Woof!")
  
  # Override describe method, calls parent first
  (def (describe self)
    # Call the parent class describe method using super()
    (= parent-description ((get (super self) "describe") self))
    (+ parent-description ". My breed is " (get self.Attributes "breed")))
)

# Create an instance of Dog
(def dog (Dog "Buddy" "Golden Retriever"))

# Call methods to demonstrate the inheritance
(print "\n--- DOG CLASS TESTS ---")
(print "Dog speak:" ((get dog "speak") dog))
(print "Dog describe:" ((get dog "describe") dog))

# Create a multi-level inheritance example
(class SuperDog (Dog)
  # Constructor with additional superpower parameter
  (def (init self name breed superpower)
    # Call the parent class init method
    ((get (super self) "init") name breed)
    # Set additional attribute
    (= self.Attributes.data.superpower superpower)
    (print "SuperDog superpower is" superpower))
  
  # Override speak method
  (def (speak self)
    (+ "Super " ((get (super self) "speak") self)))
  
  # Override describe method, calls parent first
  (def (describe self)
    # Call the parent class describe method
    (= parent-description ((get (super self) "describe") self))
    (+ parent-description ". I have the superpower of " (get self.Attributes "superpower")))
)

# Create an instance of SuperDog
(def superdog (SuperDog "Rex" "German Shepherd" "flying"))

# Call methods to demonstrate multi-level inheritance
(print "\n--- SUPERDOG CLASS TESTS ---")
(print "SuperDog speak:" ((get superdog "speak") superdog))
(print "SuperDog describe:" ((get superdog "describe") superdog))