# 01_basic_dict.m28
# 
# This example demonstrates basic dictionary operations in M28:
# - Creating empty and populated dictionaries
# - Adding values to dictionaries
# - Retrieving values from dictionaries
# - Using default values for missing keys

(print "=== Basic Dictionary Creation and Usage ===")

#-----------------------------------------
# Dictionary Creation
#-----------------------------------------

# Create an empty dictionary
(print "\n--- Creating Dictionaries ---")
(def empty_dict (dict))
(print "Empty dictionary:" empty_dict)

# Create a dictionary with initial values
(def person (dict "name" "Alice" "age" 30))
(print "Person dictionary:" person)

# Alternative dictionary creation with key-value pairs
(= points (dict "x" 10 "y" 20))
(print "Points dictionary:" points)

#-----------------------------------------
# Basic Dictionary Operations
#-----------------------------------------

# Adding values to a dictionary
(print "\n--- Adding Values ---")

# Setting by reassignment
(= empty_dict (dict "language" "M28"))
(print "Dictionary after adding value:" empty_dict)

# Modify existing value
(= person (dict "name" "Alice" "age" 31))
(print "Person after updating age:" person)

#-----------------------------------------
# Retrieving Values
#-----------------------------------------

# Getting values from a dictionary
(print "\n--- Retrieving Values ---")
(print "Person's name:" (get person "name"))
(print "Person's age:" (get person "age"))

# Getting values with default for missing keys
(print "Person's city (missing key):" (get person "city" "Unknown"))

# Check if a key exists using get with a default
(= has_name (not (= (get person "name" None) None)))
(print "Does person have 'name' key?:" has_name)

#-----------------------------------------
# Dictionary Size
#-----------------------------------------

# Get dictionary size/length
(print "\n--- Dictionary Size ---")
(print "Person dictionary size:" (len person))

(print "\n=== Basic Dictionary Example Complete ===")