# Using Custom Modules
# Demonstrates importing and using our custom math_utils module

# NOTE: This example requires math_utils.m28 to be in the same directory
# or in the module search path. The math_utils.m28 file is provided
# in this directory.
#
# To run this example:
# 1. Make sure you're in the examples/05_modules directory
# 2. Run: ../../bin/m28 using_custom_modules.m28
#
# The module import will fail if math_utils.m28 is not found.

# Import the entire module
(import math_utils)

# Use module constants
(print "PI =" math_utils.PI)
(print "E =" math_utils.E)
(print "Golden Ratio =" math_utils.GOLDEN_RATIO)

# Use circle functions
(= radius 5)
(print "\nCircle with radius" radius ":")
(print "Area:" (math_utils.circle_area radius))
(print "Circumference:" (math_utils.circle_circumference radius))

# Temperature conversions
(print "\nTemperature conversions:")
(= temp_c 25)
(= temp_f (math_utils.celsius_to_fahrenheit temp_c))
(print temp_c "째C =" temp_f "째F")
(print temp_f "째F =" (math_utils.fahrenheit_to_celsius temp_f) "째C")

# Statistical functions
(print "\nStatistics:")
(= data [1, 2, 3, 4, 5, 6, 7, 8, 9])
(print "Data:" data)
(print "Mean:" (math_utils.mean data))
(print "Median:" (math_utils.median data))

# Distance calculation
(print "\nDistance calculation:")
(= p1 [0, 0])
(= p2 [3, 4])
(print "Distance from" p1 "to" p2 ":" (math_utils.distance 0 0 3 4))

# Factorial
(print "\nFactorials:")
(for n [0, 1, 5, 10]
  (print n "! =" (math_utils.factorial n)))

# Prime checking
(print "\nPrime numbers up to 20:")
(= primes [])
(for n (range 2 21)
  (if (math_utils.is_prime n)
    (= primes (primes.append n))))
(print primes)

# Import specific functions
# Note: from...import syntax not yet supported in M28
# (from math_utils import (circle_area is_prime factorial))

# Import with alias - also not yet supported
# (import math_utils as mu)

(print "\nExample complete!")