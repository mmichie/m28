# Exception Handling System Tests
# This file tests the enhanced exception system with inheritance, custom exceptions, and traceback

# Define assert helper function
(def (assert condition message)
  (if (not condition)
      (begin
        (print (+ "FAIL: " message))
        False)
      (begin
        (print (+ "PASS: " message))
        True)))

(print "\n===== Running Exception System Tests =====")

# Test basic exception handling
(print (assert
         (try
           (/ 10 0)
           (except
             True))
         "Basic exception handling"))

# Test typed exceptions
(print (assert
         (try
           (raise ValueError "Invalid value")
           (except ValueError
             True)
           (except
             False))
         "ValueError handling"))

(print (assert
         (try
           (raise TypeError "Wrong type")
           (except ValueError
             False)
           (except TypeError
             True))
         "TypeError handling"))

# Test exception binding with 'as'
(print (assert
         (try
           (raise ValueError "Test message")
           (except ValueError as e
             (and
               (== (. e type) "ValueError")
               (== (. e message) "Test message"))))
         "Exception binding with 'as'"))

# Test finally blocks
(let [executed False]
  (try
    (raise "An error")
    (except
      (print "Caught exception"))
    (finally
      (set! executed True)))
  (print (assert executed "Finally block execution")))

# Test custom exception definition and inheritance
# Define custom exception hierarchy
(defexception CustomError Exception)
(defexception AppError CustomError)
(defexception ConfigError AppError)

# Test direct match
(print (assert
         (try
           (raise ConfigError "Config file missing")
           (except ConfigError
             True)
           (except
             False))
         "Direct exception match"))

# Test inheritance match
(print (assert
         (try
           (raise ConfigError "Config file missing")
           (except AppError
             True)
           (except
             False))
         "Parent exception match"))

# Test inheritance match with grandparent
(print (assert
         (try
           (raise ConfigError "Config file missing")
           (except CustomError
             True)
           (except
             False))
         "Grandparent exception match"))

# Test exception cause chaining
(print (assert
         (try
           (try
             (raise ValueError "Original error")
             (except ValueError as original
               (raise TypeError "Wrapped error" original)))
           (except TypeError as e
             (and
               (== (. e type) "TypeError")
               (!= (. e cause) nil))))
         "Exception cause chaining"))

(print "===== Exception System Tests Complete =====")