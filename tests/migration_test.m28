# Test migrated functions to ensure they work correctly

# Test math functions
(assert (== (sqrt 4) 2) "sqrt of 4 should be 2")
(assert (== (sqrt 9) 3) "sqrt of 9 should be 3")
(assert (== (sin 0) 0) "sin(0) should be 0")
(assert (== (cos 0) 1) "cos(0) should be 1")
(assert (== (floor 3.7) 3) "floor(3.7) should be 3")
(assert (== (ceil 3.2) 4) "ceil(3.2) should be 4")

# Test string functions
(assert (== (upper "hello") "HELLO") "upper should convert to uppercase")
(assert (== (lower "WORLD") "world") "lower should convert to lowercase")
(assert (contains "hello world" "world") "contains should find substring")
(assert (starts-with "hello" "he") "starts-with should check prefix")
(assert (ends-with "hello" "lo") "ends-with should check suffix")
(assert (== (find "hello" "ll") 2) "find should return index")
(assert (== (count "hello" "l") 2) "count should count occurrences")

# Test numeric functions
(assert (== (abs -5) 5) "abs of -5 should be 5")
(assert (== (abs 5) 5) "abs of 5 should be 5")
(assert (== (round 3.7) 4) "round(3.7) should be 4")
(assert (== (round 3.14159 2) 3.14) "round(3.14159, 2) should be 3.14")

# Test divmod
(= dm (divmod 7 3))
(assert (== dm (2, 1)) "divmod(7, 3) should be (2, 1)")

# Test pow
(assert (== (pow 2 3) 8) "pow(2, 3) should be 8")
(assert (== (pow 2 3 5) 3) "pow(2, 3, 5) should be 3")

# Test sum
(assert (== (sum [1, 2, 3]) 6) "sum([1, 2, 3]) should be 6")
(assert (== (sum [1, 2, 3] 10) 16) "sum([1, 2, 3], 10) should be 16")

(print "All migration tests passed!")