# Test for continue statement in while loops
# This test demonstrates proper usage and common pitfalls

(print "\n=== Testing Continue in While Loops ===\n")

# Test 1: Proper usage - increment before continue
(print "Test 1: Proper continue usage (increment before continue)")
(= i 0)
(= result [])
(while (< i 5)
  (= i (+ i 1))  # Increment BEFORE continue
  (if (== i 3)
    (continue))
  (= result (append result i)))
(print "  Result:" result)
(assert (== result [1 2 4 5]) "Continue should skip i=3")
(print "  PASS: Continue worked correctly\n")

# Test 2: Common pitfall - increment after continue (would cause infinite loop)
(print "Test 2: Demonstrating infinite loop pitfall")
(print "  Code pattern that causes infinite loop:")
(print "    (while (< i 5)")
(print "      (if (== i 3) (continue))")  
(print "      (= i (+ i 1)))  # This line is never reached when i=3")
(print "  Result: Infinite loop at i=3")
(print "  Solution: Always increment loop counter before continue\n")

# Test 3: Continue with multiple conditions
(print "Test 3: Continue with multiple skip conditions")
(= i 0)
(= result [])
(while (< i 10)
  (= i (+ i 1))
  # Skip multiples of 3
  (if (== (% i 3) 0)
    (continue))
  (= result (append result i)))
(print "  Result:" result)
(assert (== result [1 2 4 5 7 8 10]) "Should skip multiples of 3")
(print "  PASS: Multiple continues worked correctly\n")

# Test 4: Nested loops with continue
(print "Test 4: Continue in nested while loops")
(= outer 0)
(= result [])
(while (< outer 3)
  (= outer (+ outer 1))
  (= inner 0)
  (while (< inner 3)
    (= inner (+ inner 1))
    (if (== inner 2)
      (continue))  # Only affects inner loop
    (= result (append result [outer inner]))))
(print "  Result:" result)
(assert (== result [[1 1] [1 3] [2 1] [2 3] [3 1] [3 3]]) 
        "Continue should only affect inner loop")
(print "  PASS: Nested continue worked correctly\n")

# Test 5: Continue with break
(print "Test 5: Using continue and break together")
(= i 0)
(= result [])
(while True
  (= i (+ i 1))
  (if (> i 10)
    (break))      # Exit loop
  (if (== (% i 2) 0)
    (continue))   # Skip even numbers
  (= result (append result i)))
(print "  Result:" result)
(assert (== result [1 3 5 7 9]) "Should only include odd numbers up to 9")
(print "  PASS: Continue and break work together correctly\n")

(print "=== All Continue Tests Passed ===\n")