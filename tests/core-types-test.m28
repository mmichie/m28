# Consolidated Core Types Test Suite
# Combines variable and arithmetic tests

(print "===== Core Types Tests =====\n")

# Section 1: Variables and Basic Types
(print "-- Variables and Basic Types --")

# Basic Assignment
(print "\nTest 1.1: Basic Assignment")
(= x 10)
(= y 20)
(= z (+ x y))

(print "x =")
(print x)
(print "Expected: 10")

(print "y =")
(print y)
(print "Expected: 20")

(print "z = x + y =")
(print z)
(print "Expected: 30")

# Variable Reassignment
(print "\nTest 1.2: Variable Reassignment")
(= x 100)
(print "After x = 100, x =")
(print x)
(print "Expected: 100")

# Different Types
(print "\nTest 1.3: Different Types")
(= a 10)            # Integer
(= b 3.14)          # Float
(= c "hello")       # String
(= d True)          # Boolean
(= e None)          # None
(= f (list 1 2 3))  # List

(print "a (integer) =")
(print a)
(print "Expected: 10")

(print "b (float) =")
(print b)
(print "Expected: 3.14")

(print "c (string) =")
(print c)
(print "Expected: hello")

(print "d (boolean) =")
(print d)
(print "Expected: True")

(print "e (None) =")
(print e)
(print "Expected: None")

(print "f (list) =")
(print f)
(print "Expected: [1, 2, 3]")

# Section 2: Arithmetic Operations
(print "\n-- Arithmetic Operations --")

# Addition
(print "\nTest 2.1: Addition")
(print "1 + 2 =")
(print (+ 1 2))
(print "Expected: 3")

(print "-1 + 1 =")
(print (+ -1 1))
(print "Expected: 0")

(print "2.5 + 3.5 =")
(print (+ 2.5 3.5))
(print "Expected: 6.0")

(print "1 + 2 + 3 + 4 + 5 =")
(print (+ 1 2 3 4 5))
(print "Expected: 15")

# Subtraction
(print "\nTest 2.2: Subtraction")
(print "5 - 3 =")
(print (- 5 3))
(print "Expected: 2")

(print "5 - (-3) =")
(print (- 5 -3))
(print "Expected: 8")

(print "5.5 - 2.2 =")
(print (- 5.5 2.2))
(print "Expected: 3.3")

# Multiplication
(print "\nTest 2.3: Multiplication")
(print "2 * 3 =")
(print (* 2 3))
(print "Expected: 6")

(print "-2 * 3 =")
(print (* -2 3))
(print "Expected: -6")

(print "0 * 100 =")
(print (* 0 100))
(print "Expected: 0")

(print "2.5 * 4 =")
(print (* 2.5 4))
(print "Expected: 10.0")

(print "2 * 3 * 4 =")
(print (* 2 3 4))
(print "Expected: 24")

# Division
(print "\nTest 2.4: Division")
(print "6 / 2 =")
(print (/ 6 2))
(print "Expected: 3")

(print "6 / -2 =")
(print (/ 6 -2))
(print "Expected: -3")

(print "5 / 2 =")
(print (/ 5 2))
(print "Expected: 2.5")

# Modulo
(print "\nTest 2.5: Modulo")
(print "10 % 3 =")
(print (% 10 3))
(print "Expected: 1")

(print "-10 % 3 =")
(print (% -10 3))
(print "Expected: -1")  # Note: Current implementation differs from Python here

(print "10 % -3 =")
(print (% 10 -3))
(print "Expected: 1")  # Note: Current implementation differs from Python here

# Power
(print "\nTest 2.6: Power Operations")
(print "2 ** 3 =")
(print (** 2 3))
(print "Expected: 8")

(print "2 ** 0 =")
(print (** 2 0))
(print "Expected: 1")

(print "2 ** -1 =")
(print (** 2 -1))
(print "Expected: 0.5")

(print "4 ** 0.5 =")
(print (** 4 0.5))
(print "Expected: 2.0")

# Complex Expressions
(print "\nTest 2.7: Complex Expressions")
(print "(2 * 3) + (10 / 2) =")
(print (+ (* 2 3) (/ 10 2)))
(print "Expected: 11")

(print "(10 - (2 * 3)) / 2 =")
(print (/ (- 10 (* 2 3)) 2))
(print "Expected: 2")

(print "1 + (3 - (1 + 1)) =")
(print (+ 1 (- 3 (+ 1 1))))
(print "Expected: 2")

(print "\n===== Core Types Tests Complete =====")