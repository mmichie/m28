(print "# Testing Exception System")

# Define test helper
(def (assert condition message)
  (if (not condition)
      (begin
        (print (+ "FAIL: " message))
        False)
      (begin
        (print (+ "PASS: " message))
        True)))

# Test 1: Basic exception handling
(print "\n## Basic exception handling")
(print (assert 
  (try
    (/ 10 0)
    (except
      True))
  "Basic exception catching"))

# Test 2: Typed exceptions
(print "\n## Typed exceptions")
(print (assert 
  (try
    (raise ValueError "Test error")
    (except ValueError
      True)
    (except
      False))
  "ValueError catching"))

(print (assert 
  (try
    (raise TypeError "Test error")
    (except ValueError
      False)
    (except TypeError
      True))
  "TypeError specificity"))

# Test 3: Exception hierarchy
(print "\n## Exception hierarchy")
(print (assert 
  (try
    (raise ValueError "Test error")
    (except Exception
      True))
  "Base class catches derived exception"))

# Test 4: Custom exceptions
(print "\n## Custom exceptions")
(defexception CustomError Exception)

(print (assert 
  (def custom-exception (defexception CustomError2 Exception))
  "Custom exception definition"))

(print (assert 
  (try
    (raise CustomError "Test error")
    (except CustomError
      True)
    (except
      False))
  "Custom exception catching"))

(print (assert 
  (try
    (raise CustomError "Test error")
    (except Exception
      True))
  "Base class catches custom exception"))

# Test 5: Nested exceptions
(print "\n## Nested exceptions")
(print (assert 
  (try
    (try
      (raise "Inner error")
      (except
        (raise "Outer error")))
    (except
      True))
  "Nested exception handling"))

(print "\n# Testing complete")