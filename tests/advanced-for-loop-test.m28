# Advanced For Loop Testing
# This test covers advanced for loop cases with the fixed implementation

(print "\n=== Advanced For Loop Testing ===\n")

# Nested for loops with break in outer loop
(print "1. Nested for loops with break in outer loop:")
(for i [1 2 3 4 5]
  (print "  Outer loop i =" i)
  (if (== i 3)
    (break))
  (for j [10 20 30]
    (print "    Inner loop j =" j)))
(print "  Expected: Should break in outer loop at i=3")

# Nested for loops with break in inner loop and continue in outer loop
(print "\n2. Complex nested loop control flow:")
(for i [1 2 3 4]
  (print "  Outer loop i =" i)
  (if (== i 2)
    (continue))
  (for j [10 20 30 40]
    (print "    Inner loop j =" j)
    (if (== j 20)
      (break))
    (print "    After j =" j)))
(print "  Expected: Should skip inner loop for i=2, break after j=20 for others")

# For loop with nested for loop (simpler version)
(print "\n3. For loop with nested for loops:")
(= outer ["A" "B" "C"])
(= inner [1 2 3])

(for x outer
  (print "  Outer loop x =" x)
  (for y inner
    (print "    Inner loop y =" y)))

# For loop with manual search
(print "\n4. For loop with search algorithm:")

(= searchTerm "B") 
(= found False)
(for x outer
  (if (== x searchTerm)
    (begin
      (print "  Found" searchTerm "!")
      (= found True)
      (break))))
(if (not found)
  (print "  Item not found"))
(print "  Search result:" found)

# Try searching for a non-existent item
(= searchTerm "Z")
(= found False) 
(for x outer
  (if (== x searchTerm)
    (begin
      (print "  Found" searchTerm "!")
      (= found True)
      (break))))
(if (not found)
  (print "  Item not found"))
(print "  Search result:" found)

# For loop with loop counter
(print "\n5. For loop with manual index tracking:")
(= index 0)
(for item ["apple" "banana" "cherry" "date"]
  (print "  Item" index ":" item)
  (= index (+ index 1)))

(print "\n=== Advanced For Loop Tests Completed ===")